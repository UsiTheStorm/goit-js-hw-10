{"version":3,"file":"1-timer.js","sources":["../src/js/utilitis/toasts.js","../src/js/1-timer.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Function to show a success toast\nexport const showSuccessToast = (message) => {\n    iziToast.success({\n        title: '✅',\n        // backgroundColor: '#a6a2e4',\n        message: message,\n        position: 'bottomRight',\n        transitionIn: 'bounceInRight',\n        transitionOut: 'fadeOut',\n        progressBar: true,\n        theme: 'light',\n        animateInside: true,\n        timeout: 5000,\n    });\n};\n\n// Function to show an error toast\nexport const showErrorToast = (message) => {\n    iziToast.error({\n        title: '❌',\n        // backgroundColor: '#a6a2e4',\n        message: message,\n        position: 'bottomRight',\n        transitionIn: 'bounceInRight',\n        transitionOut: 'fadeOut',\n        progressBar: true,\n        theme: 'light',\n        animateInside: true,\n        timeout: 5000,\n    });\n};\n\n// Function to show a warning toast\nexport const showWarningToast = (message) => {\n    iziToast.warning({\n        title: '⚠️',\n        // backgroundColor: '#a6a2e4',\n        message: message,\n        position: 'bottomRight',\n        transitionIn: 'bounceInRight',\n        transitionOut: 'fadeOut',\n        progressBar: true,\n        theme: 'light',\n        animateInside: true,\n        timeout: 5000,\n    });\n};\n","import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport { showSuccessToast, showErrorToast, showWarningToast } from './utilitis/toasts';\n\nconst startBtn = document.querySelector('[data-start]');\nconst stopBtn = document.querySelector('[data-stop]');\n\nconst dateInput = document.querySelector('#datetime-picker');\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\nconst savedDate = Number(localStorage.getItem('countdownDate'));\n\nstartBtn.disabled = true;\nstopBtn.disabled = true;\n\n// Function to check if there is svaed date from previous\nfunction checkForSavedDate() {\n    if (savedDate && Number.isFinite(savedDate)) {\n        let parsedDate = new Date(Number(savedDate));\n        if (parsedDate > new Date()) {\n            userSelectedDate = parsedDate;\n            updateUi(convertMs(userSelectedDate - Date.now()));\n            startCountdown();\n        } else {\n            localStorage.removeItem('countdownDate');\n        }\n    }\n}\ncheckForSavedDate();\n\nstartBtn.addEventListener('click', () => {\n    if (!userSelectedDate || userSelectedDate < new Date()) {\n        showWarningToast('Please choose a date in the future');\n    } else {\n        startCountdown();\n        showSuccessToast('Countdown started');\n    }\n});\nstopBtn.addEventListener('click', stopCountdown);\n\n// Function to convert milliseconds to days, hours, minutes and seconds\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\n// Function to add leading zero\nfunction pad(value) {\n    return value.toString().padStart(2, '0');\n}\n\n// Function to get time difference in milliseconds\nfunction getMsDifference(selectedDate) {\n    return selectedDate - Date.now();\n}\n\n// Function to update UI\nfunction updateUi({ days, hours, minutes, seconds }) {\n    daysEl.textContent = pad(days);\n    hoursEl.textContent = pad(hours);\n    minutesEl.textContent = pad(minutes);\n    secondsEl.textContent = pad(seconds);\n}\n// Function to reset timer\nfunction resetTimer() {\n    clearInterval(timerId);\n    userSelectedDate = null;\n    timerId = null;\n    startBtn.disabled = true;\n    stopBtn.disabled = true;\n    dateInput.disabled = false;\n    updateUi({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    localStorage.removeItem('countdownDate');\n}\n\n// Function to start countdown\nfunction startCountdown() {\n    startBtn.disabled = true;\n    stopBtn.disabled = false;\n\n    if (timerId !== null) {\n        console.log('Timer is already run');\n        return;\n    }\n\n    dateInput.disabled = true;\n\n    timerId = setInterval(() => {\n        let msDiff = getMsDifference(userSelectedDate);\n        let time = convertMs(msDiff);\n        updateUi(time);\n        if (msDiff <= 0) {\n            console.log('Time is up');\n            showSuccessToast('Time is up');\n            resetTimer();\n        }\n    }, 1000);\n}\n\n// Function to stop countdown\nfunction stopCountdown() {\n    resetTimer();\n    console.log('Timer stopped');\n}\n\n// Timer initialization\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minDate: 'today',\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if (userSelectedDate < new Date()) {\n            showWarningToast('Please choose a date in the future');\n            startBtn.disabled = true;\n            stopBtn.disabled = true;\n        } else {\n            startBtn.disabled = false;\n            stopBtn.disabled = true;\n            localStorage.setItem('countdownDate', userSelectedDate.getTime());\n        }\n    },\n};\n\nflatpickr('#datetime-picker', options);\n"],"names":["showSuccessToast","message","iziToast","showWarningToast","startBtn","stopBtn","dateInput","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","savedDate","checkForSavedDate","parsedDate","updateUi","convertMs","startCountdown","stopCountdown","ms","days","hours","minutes","seconds","pad","value","getMsDifference","selectedDate","resetTimer","msDiff","time","options","selectedDates","flatpickr"],"mappings":"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"}